{"version":3,"sources":["webpack:///ProportionalImage.bundle.js","webpack:///webpack/bootstrap b155aea12427bc31ca37","webpack:///./src/main.js","webpack:///external \"React\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","ProportionalImage","_React$Component","this","_this","getPrototypeOf","_imageOnload","bind","_imageOnerror","state","src","placeholderHidden","placeholder","sizing","position","proportion","loading","error","_load","_computeDimensions","_computeProportion","aspect","_props","width","height","setState","isNaN","indexOf","parts","split","map","part","parseFloat","prevState","toString","substring","_state","_props2","preload","fade","placeholderSizing","alt","createElement","className","style","paddingTop","role","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","display","onLoad","onError","_reset","preventLoad","Component","React"],"mappings":"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","file":"ProportionalImage.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ProportionalImage = function (_React$Component) {\n\t  _inherits(ProportionalImage, _React$Component);\n\t\n\t  /**\n\t   * `ProportionalImage` is an element for displaying an image that provides useful sizing and preloading options not found on the standard `<img>` tag.\n\t   * The `sizing` option allows the image to be either cropped (`cover`) or letterboxed (`contain`) to fill a fixed user-size placed on the element.\n\t   * The `preload` option prevents the browser from rendering the image until the image is fully loaded.\n\t   * In the interim, either the element's CSS `background-color` can be be used as the placeholder, or the `placeholder` property can be set to a URL (preferably a data-URI, for instant rendering) for a placeholder image.\n\t   * The `fade` option (only valid when `preload` is set) will cause the placeholder image/color to be faded out once the image is rendered.\n\t   *\n\t   * Examples:\n\t   * Basically identical to `<img src=\"...\">` tag:\n\t   * ```\n\t   * <ProportionalImage width=\"200\" height=\"200\" src=\"http://lorempixel.com/400/400\" />\n\t   * ```\n\t   * Will letterbox the image to fit and use styles rather than the attributes to set height and width:\n\t   * ```\n\t   * <ProportionalImage style={{width:'400px', height:'400px'}} sizing=\"contain\" src=\"http://lorempixel.com/600/400\" />\n\t   * ```\n\t   * Will crop the image to fit:\n\t   * ```\n\t   * <ProportionalImage style={{width:'400px', height:'400px'}} sizing=\"cover\" src=\"http://lorempixel.com/600/400\" />\n\t   * ```\n\t   * Will show light-gray background until the image loads:\n\t   * ```\n\t   * <ProportionalImage style={{width:'400px', height:'400px', backgroundColor: 'lightgray'}} sizing=\"cover\" preload=\"true\" src=\"http://lorempixel.com/600/400\" />\n\t   * ```\n\t   * Will show a base-64 encoded placeholder image until the image loads:\n\t   * ```\n\t   * <ProportionalImage style={{width:'400px', height:'400px'}} placeholder=\"data:image/gif;base64,...\" sizing=\"cover\" preload=\"true\" src=\"http://lorempixel.com/600/400\" />\n\t   * ```\n\t   * Will fade the light-gray background out once the image is loaded:\n\t   * ```\n\t   * <ProportionalImage style={{width:'400px', height:'400px', backgroundColor: 'lightgray'}} sizing=\"cover\" preload=\"true\" fade=\"true\" src=\"http://lorempixel.com/600/400\" />\n\t   * ```\n\t   * Will disregard the height, because the aspect is provided, and reduce the image height to be in 16:9 ratio. Specifying height in this case is not necessary\n\t   * ```\n\t   * <ProportionalImage aspect=\"16:9\" style={{width:'400px', height:'400px', backgroundColor: 'lightgray'}} sizing=\"cover\" preload=\"true\" fade=\"true\" src=\"http://lorempixel.com/600/400\" />\n\t   * ```\n\t   * If you don't want to stretch a placeholder, but display it in its natural size even if the main image uses `sizing`, feel free to use a PostCSS mixin `--ProportionalImage-placeholder` to restyle it:\n\t   * ```css\n\t   * :root{\n\t   *  --ProportionalImage-placeholder: {\n\t   *    background-color: #f0f2f5;\n\t   *    background-size: auto !important;\n\t   *  };\n\t   * }\n\t   * ```\n\t   *\n\t   * @param {Object} props\n\t   * @param {String} props.src - The URL of an image.\n\t   * @param {String} props.alt - A short text alternative for the image.\n\t   * @param {Boolean} props.preventLoad - When true, the image is prevented from loading and any placeholder is shown.  This may be useful when a binding to the src property is known to be invalid, to prevent 404 requests.\n\t   * @param {String} props.sizing - Sets a sizing option for the image.  Valid values are `contain` (full aspect ratio of the image is contained within the element and letterboxed) or `cover` (image is cropped in order to fully cover the bounds of the element), or `null` (default: image takes natural size). Make sure you specify `height` and `width` if you use anything other thant `none` for `sizing`\n\t   * @param {String} props.position - When a sizing option is used (`cover` or `contain`), this determines how the image is aligned within the element bounds.\n\t   * @param {Boolean} props.preload - When `true`, any change to the `src` property will cause the `placeholder` image to be shown until the new image has loaded.\n\t   * @param {Boolean} props.fade - When `preload` is true, setting `fade` to true will cause the image to fade into place.\n\t   * @param {String} props.placeholder - This image will be used as a background/placeholder until the src image has loaded. Use of a data-URI for placeholder is encouraged for instant rendering.\n\t   * @param {String} props.placeholderSizing - Sets a sizing option for the placeholder. By default it's the same as for the `src` image, but set to `initial` or other valid `background-size` value to override.\n\t   * @param {String} props.width - Can be used to set the width of image (e.g. via binding); size may also be set via CSS.\n\t   * @param {String} props.height - Can be used to set the height of image (e.g. via binding); size may also be set via CSS.\n\t   * @param {String} props.aspect - Specify the aspect ratio to maintain, two numbers separated by semicolon(e.g. `16:9`). Make sure that the container for the image can resize vertically/ has enough space for it\n\t   * */\n\t  function ProportionalImage(props) {\n\t    _classCallCheck(this, ProportionalImage);\n\t\n\t    var _this = _possibleConstructorReturn(this, (ProportionalImage.__proto__ || Object.getPrototypeOf(ProportionalImage)).call(this, props));\n\t\n\t    _this._imageOnload = _this._imageOnload.bind(_this);\n\t    _this._imageOnerror = _this._imageOnerror.bind(_this);\n\t    _this.state = {\n\t      src: '',\n\t      placeholderHidden: !!!_this.props.placeholder,\n\t      sizing: _this.props.sizing ? _this.props.sizing : null,\n\t      position: _this.props.position ? _this.props.position : 'center',\n\t      proportion: 0,\n\t      loaded: false, //true when the image is loaded.\n\t      loading: false, //tracks the loading state of the image when the `preload` option is used.\n\t      error: false //indicates that the last set `src` failed to load.\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(ProportionalImage, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this._load();\n\t      this._computeDimensions();\n\t      this._computeProportion(this.props.aspect);\n\t    }\n\t  }, {\n\t    key: '_computeDimensions',\n\t    value: function _computeDimensions() {\n\t      var _props = this.props,\n\t          width = _props.width,\n\t          height = _props.height;\n\t\n\t      this.setState({\n\t        width: isNaN(width) ? width : width + 'px',\n\t        height: isNaN(height) ? height : height + 'px'\n\t      });\n\t    }\n\t    /**\n\t     * Computes aspect ratio of the image\n\t     * */\n\t\n\t  }, {\n\t    key: '_computeProportion',\n\t    value: function _computeProportion(aspect) {\n\t      if (aspect) {\n\t        if (aspect.indexOf(':') > -1) {\n\t          var parts = aspect.split(':').map(function (part) {\n\t            return parseFloat(part);\n\t          });\n\t\n\t          if (!isNaN(parts[0]) && !isNaN(parts[1])) {\n\t            this.setState(function (prevState) {\n\t              if (!isNaN(parseFloat(prevState.width))) {\n\t                return {\n\t                  proportion: (parseFloat(prevState.width) * (parts[1] / parts[0])).toString() + prevState.width.substring(parseFloat(prevState.width).toString().length),\n\t                  height: 'auto'\n\t                };\n\t              } else {\n\t                //throw new TypeError('Width in ProportionalImage has to be either in pixels or in percent')\n\t              }\n\t            });\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _state = this.state,\n\t          width = _state.width,\n\t          height = _state.height,\n\t          proportion = _state.proportion,\n\t          src = _state.src,\n\t          sizing = _state.sizing,\n\t          position = _state.position,\n\t          loading = _state.loading,\n\t          loaded = _state.loaded,\n\t          placeholderHidden = _state.placeholderHidden,\n\t          _props2 = this.props,\n\t          preload = _props2.preload,\n\t          fade = _props2.fade,\n\t          placeholderSizing = _props2.placeholderSizing,\n\t          placeholder = _props2.placeholder,\n\t          alt = _props2.alt;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'ProportionalImage',\n\t          style: {\n\t            width: width,\n\t            height: height,\n\t            paddingTop: proportion\n\t          } },\n\t        _react2.default.createElement('div', { className: 'sizedImgDiv',\n\t          role: 'img',\n\t          style: {\n\t            backgroundImage: 'url(' + src + ')',\n\t            backgroundSize: sizing,\n\t            backgroundPosition: position,\n\t            backgroundRepeat: sizing && 'no-repeat',\n\t            display: sizing ? 'block' : 'none'\n\t          }\n\t        }),\n\t        _react2.default.createElement('img', {\n\t          src: src,\n\t          alt: alt,\n\t          onLoad: this._imageOnload,\n\t          onError: this._imageOnerror,\n\t          style: {\n\t            display: sizing ? 'none' : 'block'\n\t          }\n\t        }),\n\t        _react2.default.createElement('div', {\n\t          style: {\n\t            backgroundImage: 'url(' + (!!placeholder && placeholder) + ')',\n\t            backgroundSize: !placeholderSizing ? sizing : placeholderSizing,\n\t            backgroundPosition: position,\n\t            backgroundRepeat: sizing && 'no-repeat'\n\t          },\n\t          className: 'imagePlaceholder ' + (placeholderHidden && 'hidden') + ' ' + (preload && fade && !loading && loaded && 'faded-out') })\n\t      );\n\t    }\n\t  }, {\n\t    key: '_imageOnload',\n\t    value: function _imageOnload() {\n\t      this.setState({\n\t        loading: false,\n\t        loaded: true,\n\t        //placeholderHidden:true,\n\t        error: false\n\t      });\n\t    }\n\t  }, {\n\t    key: '_imageOnerror',\n\t    value: function _imageOnerror() {\n\t      this.setState(_extends({}, this._reset(), {\n\t        error: true\n\t      }));\n\t    }\n\t  }, {\n\t    key: '_reset',\n\t    value: function _reset() {\n\t      return {\n\t        src: '',\n\t        loading: false,\n\t        loaded: false,\n\t        error: false\n\t      };\n\t    }\n\t  }, {\n\t    key: '_load',\n\t    value: function _load() {\n\t      var state = this._reset();\n\t      if (!this.props.preventLoad) {\n\t        var src = this.props.src;\n\t        if (state.src != src) {\n\t          state = _extends({}, state, {\n\t            src: !!src && src,\n\t            loading: !!src\n\t          });\n\t        }\n\t      }\n\t      this.setState(state);\n\t    }\n\t  }]);\n\t\n\t  return ProportionalImage;\n\t}(_react2.default.Component);\n\t\n\texports.default = ProportionalImage;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = React;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ProportionalImage.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b155aea12427bc31ca37","import React from 'react';\n\nclass ProportionalImage extends React.Component {\n  /**\n   * `ProportionalImage` is an element for displaying an image that provides useful sizing and preloading options not found on the standard `<img>` tag.\n   * The `sizing` option allows the image to be either cropped (`cover`) or letterboxed (`contain`) to fill a fixed user-size placed on the element.\n   * The `preload` option prevents the browser from rendering the image until the image is fully loaded.\n   * In the interim, either the element's CSS `background-color` can be be used as the placeholder, or the `placeholder` property can be set to a URL (preferably a data-URI, for instant rendering) for a placeholder image.\n   * The `fade` option (only valid when `preload` is set) will cause the placeholder image/color to be faded out once the image is rendered.\n   *\n   * Examples:\n   * Basically identical to `<img src=\"...\">` tag:\n   * ```\n   * <ProportionalImage width=\"200\" height=\"200\" src=\"http://lorempixel.com/400/400\" />\n   * ```\n   * Will letterbox the image to fit and use styles rather than the attributes to set height and width:\n   * ```\n   * <ProportionalImage style={{width:'400px', height:'400px'}} sizing=\"contain\" src=\"http://lorempixel.com/600/400\" />\n   * ```\n   * Will crop the image to fit:\n   * ```\n   * <ProportionalImage style={{width:'400px', height:'400px'}} sizing=\"cover\" src=\"http://lorempixel.com/600/400\" />\n   * ```\n   * Will show light-gray background until the image loads:\n   * ```\n   * <ProportionalImage style={{width:'400px', height:'400px', backgroundColor: 'lightgray'}} sizing=\"cover\" preload=\"true\" src=\"http://lorempixel.com/600/400\" />\n   * ```\n   * Will show a base-64 encoded placeholder image until the image loads:\n   * ```\n   * <ProportionalImage style={{width:'400px', height:'400px'}} placeholder=\"data:image/gif;base64,...\" sizing=\"cover\" preload=\"true\" src=\"http://lorempixel.com/600/400\" />\n   * ```\n   * Will fade the light-gray background out once the image is loaded:\n   * ```\n   * <ProportionalImage style={{width:'400px', height:'400px', backgroundColor: 'lightgray'}} sizing=\"cover\" preload=\"true\" fade=\"true\" src=\"http://lorempixel.com/600/400\" />\n   * ```\n   * Will disregard the height, because the aspect is provided, and reduce the image height to be in 16:9 ratio. Specifying height in this case is not necessary\n   * ```\n   * <ProportionalImage aspect=\"16:9\" style={{width:'400px', height:'400px', backgroundColor: 'lightgray'}} sizing=\"cover\" preload=\"true\" fade=\"true\" src=\"http://lorempixel.com/600/400\" />\n   * ```\n   * If you don't want to stretch a placeholder, but display it in its natural size even if the main image uses `sizing`, feel free to use a PostCSS mixin `--ProportionalImage-placeholder` to restyle it:\n   * ```css\n   * :root{\n   *  --ProportionalImage-placeholder: {\n   *    background-color: #f0f2f5;\n   *    background-size: auto !important;\n   *  };\n   * }\n   * ```\n   *\n   * @param {Object} props\n   * @param {String} props.src - The URL of an image.\n   * @param {String} props.alt - A short text alternative for the image.\n   * @param {Boolean} props.preventLoad - When true, the image is prevented from loading and any placeholder is shown.  This may be useful when a binding to the src property is known to be invalid, to prevent 404 requests.\n   * @param {String} props.sizing - Sets a sizing option for the image.  Valid values are `contain` (full aspect ratio of the image is contained within the element and letterboxed) or `cover` (image is cropped in order to fully cover the bounds of the element), or `null` (default: image takes natural size). Make sure you specify `height` and `width` if you use anything other thant `none` for `sizing`\n   * @param {String} props.position - When a sizing option is used (`cover` or `contain`), this determines how the image is aligned within the element bounds.\n   * @param {Boolean} props.preload - When `true`, any change to the `src` property will cause the `placeholder` image to be shown until the new image has loaded.\n   * @param {Boolean} props.fade - When `preload` is true, setting `fade` to true will cause the image to fade into place.\n   * @param {String} props.placeholder - This image will be used as a background/placeholder until the src image has loaded. Use of a data-URI for placeholder is encouraged for instant rendering.\n   * @param {String} props.placeholderSizing - Sets a sizing option for the placeholder. By default it's the same as for the `src` image, but set to `initial` or other valid `background-size` value to override.\n   * @param {String} props.width - Can be used to set the width of image (e.g. via binding); size may also be set via CSS.\n   * @param {String} props.height - Can be used to set the height of image (e.g. via binding); size may also be set via CSS.\n   * @param {String} props.aspect - Specify the aspect ratio to maintain, two numbers separated by semicolon(e.g. `16:9`). Make sure that the container for the image can resize vertically/ has enough space for it\n   * */\n  constructor(props){\n    super(props);\n    this._imageOnload = this._imageOnload.bind(this);\n    this._imageOnerror = this._imageOnerror.bind(this);\n    this.state = {\n      src: '',\n      placeholderHidden:!(!!this.props.placeholder),\n      sizing: this.props.sizing?this.props.sizing:null,\n      position: this.props.position?this.props.position:'center',\n      proportion:0,\n      loaded:false, //true when the image is loaded.\n      loading:false, //tracks the loading state of the image when the `preload` option is used.\n      error:false //indicates that the last set `src` failed to load.\n    }\n  }\n  componentDidMount() {\n    this._load();\n    this._computeDimensions();\n    this._computeProportion(this.props.aspect);\n  }\n  _computeDimensions(){\n    let {width,height} = this.props;\n    this.setState({\n      width:isNaN(width) ? width : width + 'px',\n      height:isNaN(height) ? height : height + 'px'\n    });\n  }\n  /**\n   * Computes aspect ratio of the image\n   * */\n  _computeProportion(aspect){\n    if(aspect){\n      if(aspect.indexOf(':')>-1){\n        let parts = aspect.split(':').map(part=>parseFloat(part));\n\n        if(!isNaN(parts[0]) && !isNaN(parts[1])){\n          this.setState(prevState=>{\n            if(!isNaN(parseFloat(prevState.width))){\n              return {\n                proportion:(parseFloat(prevState.width) * (parts[1]/parts[0])).toString() + prevState.width.substring(parseFloat(prevState.width).toString().length),\n                height: 'auto'\n              }\n            } else {\n              //throw new TypeError('Width in ProportionalImage has to be either in pixels or in percent')\n            }\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    let {width,height,proportion,src,sizing,position,loading,loaded,placeholderHidden} = this.state,\n        {preload,fade,placeholderSizing,placeholder,alt} = this.props;\n    return (\n      <div className=\"ProportionalImage\"\n           style={{\n             width: width,\n             height: height,\n             paddingTop: proportion\n           }}>\n        <div className=\"sizedImgDiv\"\n             role=\"img\"\n             style={{\n               backgroundImage: `url(${src})`,\n               backgroundSize:sizing,\n               backgroundPosition:position,\n               backgroundRepeat: sizing && 'no-repeat',\n               display: sizing? 'block':'none'\n             }}\n        ></div>\n        <img\n          src={src}\n          alt={alt}\n          onLoad={this._imageOnload}\n          onError={this._imageOnerror}\n          style={{\n            display: sizing? 'none':'block'\n          }}\n        />\n        <div\n          style={{\n            backgroundImage: `url(${!!placeholder && placeholder})`,\n            backgroundSize: !placeholderSizing?sizing:placeholderSizing,\n            backgroundPosition:position,\n            backgroundRepeat: sizing && 'no-repeat'\n          }}\n          className={`imagePlaceholder ${placeholderHidden && 'hidden'} ${(preload && fade && !loading && loaded) && 'faded-out'}`}></div>\n      </div>\n    );\n  }\n\n  _imageOnload(){\n    this.setState({\n      loading:false,\n      loaded:true,\n      //placeholderHidden:true,\n      error:false\n    })\n  }\n  _imageOnerror(){\n    this.setState({\n      ...this._reset(),\n      error:true\n    });\n  }\n  _reset() {\n    return{\n      src:'',\n      loading:false,\n      loaded:false,\n      error:false\n    }\n  }\n  _load(){\n    let state = this._reset();\n    if(!this.props.preventLoad) {\n      let src = this.props.src;\n      if (state.src != src) {\n        state = {\n          ...state,\n          src: !!src && src,\n          loading:!!src\n        };\n      }\n    }\n    this.setState(state);\n  }\n}\n\nexport default ProportionalImage;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}